# version: "3.8"

# x-common-variables: &common-variables
#   POSTGRES: postgresql://postgres:postgres@postgres:5432/postgres?connect_timeout=300
#   MONGO: mongodb://user:pass@mongodb
#   EXE_ENV: DEV

# networks:
#   frontend:
#   backend:

# services:
#   user:
#     container_name: user
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./user
#     volumes:
#       - ./user:/home/node/app/
#     ports:
#       - 8080:3000
#     restart: on-failure
#     networks:
#       - backend
#     environment: *common-variables

#   # matching:
#   #   container_name: matching
#   #   build:
#   #     dockerfile: Dockerfile.dev
#   #     context: ./matching
#   #   volumes:
#   #     - "./matching/key.json:/home/node/app/key.json"
#   #     - ./matching:/home/node/app/
#   #   ports:
#   #     - 8000:3000
#   #   restart: on-failure
#   #   networks:
#   #     - backend
#   #   environment:
#   #     - GOOGLE_APPLICATION_CREDENTIALS=/home/node/app/key.json

#   # matching_postgres:
#   #   container_name: matching_postgres
#   #   build:
#   #     context: ./matching_postgres
#   #     dockerfile: Dockerfile
#   #   restart: always
#   #   environment:
#   #     - POSTGRES_USER=postgres
#   #     - POSTGRES_PASSWORD=postgres
#   #   volumes:
#   #     - ./matching_postgres:/var/lib/postgresql/data
#   #   ports:
#   #     - "5433:5433"
#   #   networks:
#   #     - backend

#   postgres:
#     container_name: postgres
#     build:
#       context: ./postgres
#       dockerfile: Dockerfile
#     restart: always
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     volumes:
#       - ./postgres:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     networks:
#       - backend

#   pgadmin:
#     container_name: pgadmin
#     image: dpage/pgadmin4
#     restart: always
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@admin.com
#       PGADMIN_DEFAULT_PASSWORD: pgadmin
#     ports:
#       - "5050:80"
#     networks:
#       - backend

#   nginx:
#     depends_on:
#       - client
#       - user
#       # - matching
#     restart: always
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./nginx
#     ports:
#       - "3000:80"
#     networks:
#       - backend
#       - frontend

#   client:
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./frontend
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     networks:
#       - frontend

# volumes:
#   postgres:
#   mongo:
#   3219User:
#   3219Matching:

version: "3.8"

x-common-variables: &common-variables
  POSTGRES: postgresql://postgres:postgres@postgres:5432/postgres?connect_timeout=300
  MONGO: mongodb://user:pass@mongodb
  EXE_ENV: DEV

networks:
  frontend:
  backend:

services:
  # user:
  #   container_name: user
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./user
  #   volumes:
  #     - 3219User:/home/node/app/
  #   ports:
  #     - 8080:3000
  #   restart: on-failure
  #   networks:
  #     - backend
  #   environment: *common-variables

  matching:
    container_name: matching
    build:
      dockerfile: Dockerfile.dev
      context: ./matching
    volumes:
      # - "./matching/key.json:/home/node/app/key.json"
      # - 3219Matching:/home/node/app/

      # - ./matching/key.json:/home/node/app/key.json
      - ./matching:/home/node/app/
    ports:
      - 8000:3000
    restart: on-failure
    networks:
      - backend
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/home/node/app/key.json

  # matching_postgres:
  #   container_name: matching_postgres
  #   build:
  #     context: ./matching_postgres
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   volumes:
  #     - postgres:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - backend

  # postgres:
  #   container_name: postgres
  #   build:
  #     context: ./postgres
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   volumes:
  #     - postgres:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - backend

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: pgadmin
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - backend

  # mongo:
  #   container_name: mongo
  #   build:
  #     context: ./mongo
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=user
  #     - MONGO_INITDB_ROOT_PASSWORD=password
  #     - MONGO_INITDB_DATABASE=admin
  #   volumes:
  #     - mongo:/data/db
  #   ports:
  #     - 27017:27017
  #   networks:
  #     - backend

  # mongo-express:
  #   image: mongo-express
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - ME_CONFIG_MONGODB_URL="mongo://user:password@mongo:27017/"
  #     - ME_CONFIG_MONGODB_SERVER=mongo
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=user
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=password
  #   networks:
  #     - backend

  nginx:
    depends_on:
      - client
      # - user
      - matching
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3000:80"
    networks:
      - backend
      - frontend

  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/key.json

volumes:
  postgres:
  mongo:
  3219User:
  3219Matching:
